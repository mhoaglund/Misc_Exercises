//Example for aggregating array values using averages locked by a drift rate.

int frames [10][16];
int frameBaseline [16];
int elapsed = 0;
int driftRate = 2;

void initFrames(){
  for (int i=0; i<10; i++)
  {
    for (int j = 0; j<16; j++)
    {
      frames[i][j] = 0;
    }
  }
  for(int k=0; k<16; k++){
    frameBaseline[k] = 0;
  }
}

void setup() {
  // put your setup code here, to run once:

}

void loop() {
  // put your main code here, to run repeatedly:
  if(elapsed < 15){
    elapsed++;
  }
  //In this example, a 4x4 array would be generated by a sensor like Omron D6T-44L.
  stackFrameFILO(CURRENTFRAME);
  frameAverage();
}

//New frame has arrived
void stackFrameFILO(int input[16]){
  //Push frames back an index, overwriting the tenth.
  for (int i=8; i>-1; i--)
  {
    int targetIndex = i+1;
    
    for (int j = 0; j<16; j++)
    {
      frames[i+1][j] = frames[i][j];
    }
  }
  //Update frame zero
  for(int k=0; k<16; k++){
    frames[k] = input[k];
  }
}

void frameAverage(){
  if(elapsed < 10){
    return;
  }
  int tempBaseline [16];
  for(int k=0; k<16; k++){
    //TODO:grab this channel from each cached frame and make a channel avg.
    int sum = 0;
    for(int l=0; l<10; l++){
      sum = sum + frames[l][k];
    }
    tempBaseline[k] = sum/10;
    if(elapsed == 10){
      frameBaseline[k]=tempBaseline[k];
    } else {
      int diff = frameBaseline[k] - tempBaseline[k];
      if(diff < driftRate){
        frameBaseline[k]=tempBaseline[k];
      } else {
        int flag = (diff > 0) ? 1 : -1;
        frameBaseline[k] += (driftRate * flag);
      }
    }
  }
}

